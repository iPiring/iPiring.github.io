{"version":3,"sources":["store.js","App.js","reportWebVitals.js","index.js"],"names":["orders","createSlice","name","initialState","reducers","addOrder","state","action","push","payload","editOrder","key","value","store","configureStore","reducer","actions","App","useState","fired","setFired","data","useSelector","dispatch","useDispatch","date","setDate","page","setPage","totalPage","setTotalPage","setData","x","i","useEffect","fetch","then","r","json","Math","ceil","length","hitung","f","split","map","parseInt","d","sort","a","b","orderAt","j","ready","moment","orderStatus","orderDiff","toNow","fromNow","setInterval","format","index","className","style","top","left","Spinner","type","color","Navbar","expand","Nav","NavItem","NavbarBrand","Image","src","width","Badge","fontSize","filter","Button","onClick","disabled","Row","v","Col","sm","md","lg","Card","minHeight","CardHeader","id","CardBody","items","varian","quantity","extra","join","CardFooter","item","hasOwnProperty","Object","assign","round","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.473f1e47.chunk.js","sourcesContent":["import { createSlice,configureStore } from '@reduxjs/toolkit'\n\nconst initialState = []\n\nconst orders = createSlice({\n    name: 'orders',\n    initialState,\n    reducers: {\n        addOrder(state, action){\n            state.push(action.payload);\n        },\n        editOrder(state, action){\n            state[action.payload.key] = action.payload.value;\n        }\n    }\n})\n\nconst store = configureStore({\n    reducer:{\n        orders : orders.reducer\n    }\n})\nexport const {addOrder,editOrder} = orders.actions\nexport default store;","import './App.css';\nimport moment from \"moment\";\nimport {createContext, useEffect, useState} from \"react\";\nimport {\n    Container,\n    Card,\n    CardBody,\n    CardHeader,\n    Row,\n    Col,\n    Navbar,\n    NavbarBrand,\n    NavbarToggler,\n    Nav,\n    NavItem, Button, CardFooter, Badge, Spinner\n} from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport {addOrder, editOrder} from './store'\nimport {Image} from \"react-bootstrap\";\nfunction App() {\n  const [fired,setFired] = useState(false);\n  const data = useSelector(state => state.orders);\n  const dispatch = useDispatch();\n  const [date,setDate] = useState('');\n  const [page,setPage] = useState(1);\n  const [totalPage,setTotalPage] = useState(1);\n  const setData = (x) => {\n      for(let i of x)\n      dispatch(addOrder(i))\n  }\n  useEffect(() => {\n    if(!fired) {\n        fetch('/api.json').then(r => r.json()).then(r => {\n            setTotalPage(Math.ceil(r.length/4))\n            const hitung = (x) => {\n                let f = x.split(\":\").map(i => parseInt(i));\n                return f[0]*60+f[1];\n            }\n            let d = r.sort((a,b) => hitung(a.orderAt)-hitung(b.orderAt) )\n            setData(d.map(i => {\n                let j = i;\n                j.ready = false;\n                let skrng = moment();\n                if(skrng < moment(j.orderAt,\"HH:mm\")){\n                    j.orderStatus = true;\n                    j.orderDiff = moment(j.orderAt,\"HH:mm\").toNow(true);\n                }else{\n                    j.orderStatus = false;\n                    j.orderDiff = moment(j.orderAt,\"HH:mm\").fromNow(true);\n                }\n                return j;\n            }))\n        });\n        setInterval(() => {\n            setDate(moment().format(\"HH:mm:ss\"))\n            setData(data.map((i,index,a) => {\n                let j = i;\n                let skrng = moment();\n                if(skrng < moment(j.orderAt,\"HH:mm\")){\n                    j.orderStatus = true;\n                    j.orderDiff = moment(j.orderAt,\"HH:mm\").toNow(true);\n                }else{\n                    j.orderStatus = false;\n                    j.orderDiff = moment(j.orderAt,\"HH:mm\").fromNow(true);\n                }\n                dispatch(editOrder({\n                    key: index,\n                    value : j\n                }))\n            }))\n        },1000);\n        setFired(true);\n    }\n  },[fired])\n    const next = () => {\n        if(page < totalPage) setPage(page+1);\n    }\n    const prev = () => {\n        if(page > 1) setPage(page-1);\n    }\n    const ready = (i) => {\n      for(let item in data){\n          if(data.hasOwnProperty(item) && data[item].id === i){\n              let j={};\n              Object.assign(j,data[item])\n              j.ready = true;\n              dispatch(editOrder({\n                  key: item,\n                  value: j\n              }))\n          }\n\n      }\n        let d = data.filter(i => !i.ready).length;\n        setTotalPage(Math.round(d/4))\n        if(Math.round(d/4) < page){\n            setPage(page-1)\n        }\n    }\n  return (\n    <div className=\"App\">\n        {!data.length && <div className=\"position-fixed h-100 w-100 d-flex align-items-center justify-content-center\" style={{top:0,left:0}}>\n            <Spinner type=\"grow\" color=\"danger\" />\n            <Spinner type=\"grow\" color=\"warning\" className=\"px-2\" />\n            <Spinner type=\"grow\" color=\"danger\" />\n        </div>}\n        <Navbar expand=\"md\" color=\"dark\" className=\"w-100\">\n            <Nav className=\"text-white d-flex align-items-center justify-content-between w-100\">\n                <NavItem>\n                    <NavbarBrand>\n                        <Image src=\"/ipiring.png\" width={100}/>\n                    </NavbarBrand>\n                </NavItem>\n                <NavItem>\n                    <div>\n                        <div>{date}</div>\n                        <Badge color=\"light\" style={{fontSize:14}}>{data.filter(i => i.ready).length} Order Finished</Badge>\n                    </div>\n                </NavItem>\n                <NavItem className=\"d-flex align-items-center\">\n\n                    <div>\n                        <div className=\"mx-3\">Page {page} of {totalPage}</div>\n                        <Button className=\"mx-1\" onClick={prev} disabled={page<=1}>{\"<\"} Prev</Button>\n                        <Button onClick={next} disabled={page>=totalPage}>Next {\">\"}</Button>\n                    </div>\n\n\n                </NavItem>\n            </Nav>\n        </Navbar>\n        <div className=\"container-fluid py-2 bg-light\">\n            <Row>\n            {data.filter(i => !i.ready).filter((v,i,a) => i<page*4&&i>=(page-1)*4).map(i =><Col sm={12} md={6} lg={3} className=\"py-2\">\n                <Card style={{minHeight:450}} color={moment() < moment(i.orderAt,\"HH:mm\")?\"success\":\"danger\"}>\n                    <CardHeader className=\"text-left  text-white font-weight-bold\">\n                        Order ID #{i.id}\n                    </CardHeader>\n                    <CardBody className=\"bg-light text-left p-2\">\n                        {i.items.map(j => <Row className=\"border-bottom pt-3 pb-1\">\n                            <Col>\n                                <div className=\"d-flex justify-content-between\">\n                                    <h6 className=\"font-weight-bold\">{j.name} <small>{j.varian}</small></h6>\n                                    <div>\n                                        <Badge color={moment() < moment(i.orderAt,\"HH:mm\")?\"success\":\"danger\"} style={{fontSize:18}}>{j.quantity}</Badge>\n                                    </div>\n                                </div>\n                                {j.extra.length?\n                                    <span className=\"text-muted\" style={{fontSize:12}}>\n                                        Extra:{j.extra.join(\",\")}\n                                    </span>:<></>}\n                            </Col>\n                        </Row>)}\n                    </CardBody>\n                    <CardFooter>\n                        <div className=\"d-flex justify-content-between text-white font-weight-bold\">\n                            <div className=\"text-left\">\n                                <small style={{fontSize:10}}>ORDER ACCEPTED AT</small><br/>\n                                <p style={{fontSize:11}}>{moment(i.orderAt,\"HH:mm\").format(\"HH:mm\")}</p>\n                            </div>\n                            <div className=\"text-right\">\n                                <small style={{fontSize:10}}>{moment() < moment(i.orderAt,\"HH:mm\")?\"TO BE READY IN\":\"DELAYED BY\"}</small><br/>\n                                <p style={{fontSize:11}}>{moment(i.orderAt,\"HH:mm\").fromNow(true)}</p>\n                            </div>\n                        </div>\n                        <Button onClick={() => ready(i.id)} className={moment() < moment(i.orderAt,\"HH:mm\")?\"w-100 font-weight-bold text-success\":\"w-100 font-weight-bold text-danger\"} color=\"light\">MARK AS READY</Button>\n                    </CardFooter>\n                </Card>\n            </Col>)}\n            </Row>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {createContext} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}